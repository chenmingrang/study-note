**************************************collection Method call****************************************
You invoke a collection method using dot notation. For detailed syntax, see Collection Method Call.

You cannot invoke a collection method from a SQL statement.

The only collection method that you can use with an empty collection is EXISTS; all others raise the exception COLLECTION_IS_NULL.



********************************eg1:Checking If a Collection Element Exists (EXISTS Method)*******************************

EXISTS(n) returns TRUE if the nth element in a collection exists;otherwise, it returns FALSE.
By combining EXISTS with DELETE, you can work with sparse nested tables.
You can also use EXISTS to avoid referencing a nonexistent element, which raises an exception. 
When passed an out-of-range subscript, EXISTS returns FALSE instead of raising SUBSCRIPT_OUTSIDE_LIMIT.


DECLARE
   TYPE NumList IS TABLE OF INTEGER;
   type ArrList is varray(10) of varchar2(30);--最多10个元素对应的属性是LIMIT
   m ArrList :=ArrList();
   n NumList := NumList(1,3,5,7);
BEGIN
  --m增加三个元素
   m.extend(3);
   m(1) :='one';
   m(2) :='two';
   m(3) :='three';
   n.DELETE(2); -- Delete the second element
   m(3) :=null;
   IF n.EXISTS(1) THEN --true
      DBMS_OUTPUT.PUT_LINE('OK, element #1 exists.  n(1) = '||n(1));
   END IF;
   IF m.EXISTS(1) THEN --true
      DBMS_OUTPUT.PUT_LINE('OK, element #1 exists.  m(1) = '||m(1));
   END IF;
   IF n.EXISTS(2) = FALSE THEN --true
      DBMS_OUTPUT.PUT_LINE('OK, element #2 was deleted.');
   END IF;
   IF m(3) is null THEN  --true
      DBMS_OUTPUT.PUT_LINE('OK, element #3 is null.');
   END IF;
   IF n.EXISTS(99) = FALSE THEN --true
      DBMS_OUTPUT.PUT_LINE('OK, element #99 does not exist at all.');
   END IF;
   IF m.EXISTS(99) = FALSE THEN --true
      DBMS_OUTPUT.PUT_LINE('OK, element #99 does not exist at all.');
   END IF;
END;


For varrays, COUNT always equals LAST.
You can increase or decrease the size of a varray using the EXTEND and TRIM methods,
so the value of COUNT can change, up to the value of the LIMIT method.

varrays:extend 增加 trim 删除(后面n个元素)


☆☆☆☆☆☆☆☆☆☆☆You cannot use EXISTS with an associative array.☆☆☆☆☆☆☆☆☆☆☆




******************************Counting the Elements in a Collection (COUNT Method)***************************

DECLARE
   TYPE dnames_var IS VARRAY(7) OF VARCHAR2(30);--最多7个元素：LIMIT属性
   dept_names dnames_var :=
     dnames_var('Shipping','Sales','Finance','Payroll');--实际元素个数4个：COUNT属性
BEGIN
   DBMS_OUTPUT.PUT_LINE
     ('dept_names has ' || dept_names.COUNT || ' elements now');
   DBMS_OUTPUT.PUT_LINE
     ('dept_names''s type can hold a maximum of '
      || dept_names.LIMIT || ' elements');
   DBMS_OUTPUT.PUT_LINE
    ('The maximum number you can use with '
     || 'dept_names.EXTEND() is '
     || (dept_names.LIMIT - dept_names.COUNT));--3
END;



****************************************遍历table*******************************************

DECLARE
   TYPE NumList IS TABLE OF NUMBER;
   n NumList := NumList(1,3,5,7);
   counter INTEGER;
BEGIN
   DBMS_OUTPUT.PUT_LINE('N''s first subscript is ' || n.FIRST);
   DBMS_OUTPUT.PUT_LINE('N''s last subscript is ' || n.LAST);
-- When the subscripts are consecutive starting at 1, 
-- it's simple to loop through them.
   FOR i IN n.FIRST .. n.LAST
   LOOP
      DBMS_OUTPUT.PUT_LINE('Element #' || i || ' = ' || n(i));
   END LOOP;
   n.DELETE(2); -- Delete second element.--如果还用以上方法遍历,当进行到2时会抛出“未找到任何数据”异常
-- When the subscripts have gaps
-- or the collection might be uninitialized,
-- the loop logic is more extensive.
-- Start at the first element
-- and look for the next element until there are no more.
   IF n IS NOT NULL THEN
      counter := n.FIRST;
      WHILE counter IS NOT NULL
      LOOP
         DBMS_OUTPUT.PUT_LINE
           ('Element #' || counter || ' = ' || n(counter));
         counter := n.NEXT(counter);
      END LOOP;
   ELSE
      DBMS_OUTPUT.PUT_LINE('N is null, nothing to do.');
   END IF;
END;